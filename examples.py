#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ PostAI Bot
"""

import asyncio
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def example_database_usage():
    """–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    print("üìä –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
    print("-" * 30)
    
    from database import Database
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = Database()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_added = db.add_user(
        user_id=123456789,
        username="example_user",
        first_name="–ò–≤–∞–Ω",
        last_name="–ò–≤–∞–Ω–æ–≤"
    )
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω: {user_added}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–Ω–∞–ª
    channel_added = db.add_channel(
        channel_id=-1001234567890,
        channel_name="–ü—Ä–∏–º–µ—Ä –∫–∞–Ω–∞–ª–∞",
        channel_username="example_channel",
        user_id=123456789
    )
    print(f"–ö–∞–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω: {channel_added}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    channels = db.get_user_channels(123456789)
    print(f"–ö–∞–Ω–∞–ª–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {len(channels)}")
    for channel in channels:
        print(f"  - {channel['channel_name']} (ID: {channel['channel_id']})")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã
    test_posts = [
        {
            'post_id': 1,
            'content': '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç üëã',
            'date': '2024-01-01 12:00:00'
        },
        {
            'post_id': 2,
            'content': '–°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π! üåü',
            'date': '2024-01-02 15:30:00'
        },
        {
            'post_id': 3,
            'content': '–î–µ–ª–∏–º—Å—è –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é üíª',
            'date': '2024-01-03 09:15:00'
        }
    ]
    
    posts_added = db.add_posts(-1001234567890, test_posts)
    print(f"–ü–æ—Å—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã: {posts_added}")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã –∫–∞–Ω–∞–ª–∞
    posts = db.get_channel_posts(-1001234567890)
    print(f"–ü–æ—Å—Ç–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: {len(posts)}")
    
    print("‚úÖ –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω\n")

async def example_gemini_usage():
    """–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å Gemini AI"""
    print("üß† –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å Gemini AI")
    print("-" * 30)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if not os.getenv('GEMINI_API_KEY'):
        print("‚ùå GEMINI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("üí° –î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á –≤ —Ñ–∞–π–ª .env –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return

    try:
        from gemini_client import GeminiClient

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        gemini = GeminiClient()
        print("‚úÖ Gemini –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (Gemini 2.5 Flash)")

        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        test_posts = [
            {
                'content': '–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∑—å—è! üëã –°–µ–≥–æ–¥–Ω—è —Ö–æ—á—É –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –≤–∞–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –Ω–æ–≤–æ—Å—Ç—å—é –∏–∑ –º–∏—Ä–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.',
                'date': '2024-01-01'
            },
            {
                'content': 'üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç! –≠—Ç–æ –±—É–¥–µ—Ç —á—Ç–æ-—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–µ. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!',
                'date': '2024-01-02'
            },
            {
                'content': 'üí° –°–æ–≤–µ—Ç –¥–Ω—è: –≤—Å–µ–≥–¥–∞ –∏–∑—É—á–∞–π—Ç–µ —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ. –ó–Ω–∞–Ω–∏—è - —ç—Ç–æ —Å–∏–ª–∞! üìö',
                'date': '2024-01-03'
            }
        ]

        print("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å—Ç–∏–ª—å –ø–æ—Å—Ç–æ–≤...")
        style_analysis = gemini.analyze_channel_style(test_posts)

        if style_analysis:
            print("‚úÖ –ê–Ω–∞–ª–∏–∑ —Å—Ç–∏–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω:")
            print(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç: {style_analysis[:200]}...")

            print("\nüéØ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–±—ã—á–Ω—ã–π –ø–æ—Å—Ç –ø–æ —Ç–µ–º–µ...")
            generated_post = await gemini.generate_post(
                style_analysis=style_analysis,
                topic="–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç",
                post_type="topic"
            )

            if generated_post:
                print("‚úÖ –û–±—ã—á–Ω—ã–π –ø–æ—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:")
                print(f"üìÑ {generated_post[:200]}...")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ—Å—Ç–∞")

            print("\nüì∞ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ—Å—Ç —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏...")
            news_post = await gemini.generate_news_based_post(
                style_analysis=style_analysis,
                topic="—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"
            )

            if news_post:
                print("‚úÖ –ü–æ—Å—Ç —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:")
                print(f"üìÑ {news_post[:200]}...")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞ —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏")

            print("\nüìä –°–æ–∑–¥–∞—é —Å–≤–æ–¥–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π...")
            news_summary = await gemini.summarize_news("–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", 3)

            if news_summary:
                print("‚úÖ –°–≤–æ–¥–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π —Å–æ–∑–¥–∞–Ω–∞:")
                print(f"üìÑ {news_summary[:200]}...")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–¥–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∏–ª—è")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Gemini: {e}")

    print("‚úÖ –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å Gemini AI –∑–∞–≤–µ—Ä—à–µ–Ω\n")

async def example_news_search():
    """–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –ø–æ–∏—Å–∫–æ–º –Ω–æ–≤–æ—Å—Ç–µ–π"""
    print("üì∞ –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –ø–æ–∏—Å–∫–æ–º –Ω–æ–≤–æ—Å—Ç–µ–π")
    print("-" * 30)

    try:
        from news_searcher import NewsSearcher

        async with NewsSearcher() as searcher:
            print("‚úÖ NewsSearcher –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

            # –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ —Ç–µ–º–µ
            print("üîç –ò—â—É –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Ç–µ–º–µ '–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç'...")
            articles = await searcher.search_news_by_topic("–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", max_results=3)

            if articles:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(articles)} —Å—Ç–∞—Ç–µ–π:")
                for i, article in enumerate(articles, 1):
                    print(f"  {i}. {article.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
                    print(f"     –ò—Å—Ç–æ—á–Ω–∏–∫: {article.get('source', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                    if article.get('published'):
                        print(f"     –î–∞—Ç–∞: {article['published']}")
                    print()
            else:
                print("‚ùå –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
            print("üìä –ü–æ–ª—É—á–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏...")
            latest_news = await searcher.get_latest_news(max_results=3)

            if latest_news:
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(latest_news)} –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π:")
                for i, article in enumerate(latest_news, 1):
                    print(f"  {i}. {article.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
                    print(f"     –ò—Å—Ç–æ—á–Ω–∏–∫: {article.get('source', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                    print()
            else:
                print("‚ùå –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")

            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
            if articles:
                print("üìù –§–æ—Ä–º–∞—Ç–∏—Ä—É—é –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏...")
                formatted_summary = searcher.format_news_summary(articles, max_articles=3)
                print("‚úÖ –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–≤–æ–¥–∫–∞:")
                print(formatted_summary[:300] + "...")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ø–æ–∏—Å–∫–æ–º –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")

    print("‚úÖ –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –ø–æ–∏—Å–∫–æ–º –Ω–æ–≤–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω\n")

async def example_post_generator():
    """–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º –ø–æ—Å—Ç–æ–≤"""
    print("‚ú® –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º –ø–æ—Å—Ç–æ–≤")
    print("-" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if not os.getenv('GEMINI_API_KEY'):
        print("‚ùå GEMINI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞")
        return
    
    try:
        from post_generator import PostGenerator
        from database import Database
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        db = Database()
        generator = PostGenerator()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        channel_id = -1001234567890
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç–∏–ª—è
        test_style = """
        –°—Ç–∏–ª—å –∫–∞–Ω–∞–ª–∞: –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π
        –¢–æ–Ω: –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π
        –≠–º–æ–¥–∑–∏: —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è üöÄ üí° ‚ú® üëã
        –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –∫–æ—Ä–æ—Ç–∫–∏–µ –∞–±–∑–∞—Ü—ã, –ø—Ä–∏–∑—ã–≤—ã –∫ –¥–µ–π—Å—Ç–≤–∏—é
        –î–ª–∏–Ω–∞: —Å—Ä–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã (100-200 —Å–ª–æ–≤)
        """
        
        db.save_style_analysis(channel_id, test_style, 10)
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç–∏–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ—Å—Ç –ø–æ —Ç–µ–º–µ
        print("üéØ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ—Å—Ç –ø–æ —Ç–µ–º–µ...")
        result = generator.generate_post_by_topic(channel_id, "–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ")
        
        if result['success']:
            print("‚úÖ –ü–æ—Å—Ç –ø–æ —Ç–µ–º–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:")
            print(f"üìÑ {result['post'][:200]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø–æ—Å—Ç
        print("\nüé≤ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å–ª—É—á–∞–π–Ω—ã–π –ø–æ—Å—Ç...")
        result = generator.generate_random_post(channel_id)
        
        if result['success']:
            print("‚úÖ –°–ª—É—á–∞–π–Ω—ã–π –ø–æ—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:")
            print(f"üìÑ {result['post'][:200]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º: {e}")
    
    print("‚úÖ –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º –ø–æ—Å—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω\n")

async def example_full_workflow():
    """–ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
    print("üîÑ –ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞")
    print("-" * 30)
    
    try:
        # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        from database import Database
        from post_generator import PostGenerator
        
        db = Database()
        generator = PostGenerator()
        
        print("1Ô∏è‚É£ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # 2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = 987654321
        db.add_user(user_id, "workflow_user", "–¢–µ—Å—Ç", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        print("2Ô∏è‚É£ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω")
        
        # 3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
        channel_id = -1009876543210
        db.add_channel(channel_id, "–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª", user_id, "test_workflow")
        print("3Ô∏è‚É£ –ö–∞–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω")
        
        # 4. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
        workflow_posts = [
            {
                'post_id': 101,
                'content': 'üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∫–∞–Ω–∞–ª! –ó–¥–µ—Å—å –º—ã –¥–µ–ª–∏–º—Å—è —Å–∞–º—ã–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏.',
                'date': '2024-01-01 10:00:00'
            },
            {
                'post_id': 102,
                'content': 'üí° –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —Å–æ–≤–µ—Ç: –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ—Å—Ç–∞–≤–∞–π—Ç–µ —É—á–∏—Ç—å—Å—è! –ó–Ω–∞–Ω–∏—è –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.',
                'date': '2024-01-02 14:30:00'
            },
            {
                'post_id': 103,
                'content': 'üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Ä–∏—é –ø–æ—Å—Ç–æ–≤ –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –±—É–¥—É—â–µ–≥–æ. –ë—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!',
                'date': '2024-01-03 16:45:00'
            }
        ]
        
        db.add_posts(channel_id, workflow_posts)
        print("4Ô∏è‚É£ –ü–æ—Å—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        
        # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        channels = db.get_user_channels(user_id)
        posts = db.get_channel_posts(channel_id)
        
        print(f"5Ô∏è‚É£ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã: {len(channels)} –∫–∞–Ω–∞–ª–æ–≤, {len(posts)} –ø–æ—Å—Ç–æ–≤")
        
        # 6. –ò–º–∏—Ç–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ API)
        mock_analysis = """
        –ê–Ω–∞–ª–∏–∑ —Å—Ç–∏–ª—è –∫–∞–Ω–∞–ª–∞:
        - –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π —Ç–æ–Ω
        - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ –ø–æ—Å—Ç–æ–≤
        - –ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        - –ö–æ—Ä–æ—Ç–∫–∏–µ, –ª–µ–≥–∫–æ —á–∏—Ç–∞–µ–º—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        """
        
        db.save_style_analysis(channel_id, mock_analysis, len(posts))
        print("6Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ —Å—Ç–∏–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        
        # 7. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∏–ª–µ
        style_info = db.get_style_analysis(channel_id)
        if style_info:
            print(f"7Ô∏è‚É£ –°—Ç–∏–ª—å –ø–æ–ª—É—á–µ–Ω: {style_info['posts_count']} –ø–æ—Å—Ç–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")
        
        print("‚úÖ –ü–æ–ª–Ω—ã–π —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—á–µ–º –ø—Ä–æ—Ü–µ—Å—Å–µ: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"""
    print("ü§ñ PostAI Bot - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)")
    print("=" * 60)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    await example_database_usage()
    await example_news_search()
    await example_gemini_usage()
    await example_post_generator()
    await example_full_workflow()

    print("üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤—å—Ç–µ GEMINI_API_KEY –≤ .env —Ñ–∞–π–ª")
    print("üì∞ –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: –ø–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏, —Å–≤–æ–¥–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π")
    print("üß† –û–±–Ω–æ–≤–ª–µ–Ω–æ: Gemini 2.5 Flash, –Ω–æ–≤—ã–π SDK")

if __name__ == "__main__":
    asyncio.run(main())
